{"data":{"repository":{"pullRequest":{"reviewThreads":{"nodes":[{"isResolved":false,"isOutdated":false,"comments":{"nodes":[{"body":"When `errors` or `warnings` arrays are empty, the `.join('\\\\n')` returns an empty string, which causes the fallback text `'(none)'` in the template literal to never display. The condition `errors || '  (none)'` evaluates the empty string as falsy in JavaScript, but an empty string is actually truthy. This results in an empty line instead of showing '(none)'. Use `errors.length ? errors : '  (none)'` or check the array length before mapping.\n```suggestion\n    const errors = validation.errors.length ? validation.errors.map(e => `  - ${e}`).join(\"\\n\") : \"  (none)\";\n    const warnings = validation.warnings.length ? validation.warnings.map(w => `  - ${w}`).join(\"\\n\") : \"  (none)\";\n\n    return `# Validation (80%)\\n\\nValid: ${validation.isValid ? \"✓\" : \"✗\"}\\nErrors:\\n${errors}\\nWarnings:\\n${warnings}`;\n```","path":"src/tools/api-database/smart-sql.ts","position":63,"line":633,"author":{"login":"copilot-pull-request-reviewer"}}]}},{"isResolved":false,"isOutdated":false,"comments":{"nodes":[{"body":"The ellipsis '...' is appended unconditionally, even when `h.query` is 50 characters or shorter. This results in misleading output like 'SELECT * FROM users... (10ms)' when the full query is 'SELECT * FROM users'. Add a conditional check: `${h.query.length > 50 ? h.query.slice(0, 50) + '...' : h.query}`.\n```suggestion\n    const recent = history.slice(0, 5).map(h => `  - ${h.query.length > 50 ? h.query.slice(0, 50) + '...' : h.query} (${h.executionTime}ms)`).join(\"\\n\");\n```","path":"src/tools/api-database/smart-sql.ts","position":70,"line":640,"author":{"login":"copilot-pull-request-reviewer"}}]}},{"isResolved":false,"isOutdated":false,"comments":{"nodes":[{"body":"The formatting percentages in headers (e.g., '95%', '80%', '86%') lack clear documentation explaining what these percentages represent. Add a comment above the `formatOutput` method or in each formatter explaining that these represent token reduction compared to a baseline format.","path":"src/tools/api-database/smart-sql.ts","position":35,"line":605,"author":{"login":"copilot-pull-request-reviewer"}}]}},{"isResolved":false,"isOutdated":false,"comments":{"nodes":[{"body":"If `analysis.tables` is an empty array, `join(', ')` returns an empty string, resulting in 'Tables: ' with no value. This is inconsistent with the 'N/A' pattern used elsewhere. Consider using `${analysis.tables.length ? analysis.tables.join(', ') : 'N/A'}` for consistency.\n```suggestion\n    return `# Analysis (86%)\\n\\nQuery Type: ${analysis.queryType}\\nComplexity: ${analysis.complexity}\\nTables: ${analysis.tables.length ? analysis.tables.join(\", \") : \"N/A\"}\\nEstimated Cost: ${analysis.estimatedCost}`;\n```","path":"src/tools/api-database/smart-sql.ts","position":79,"line":649,"author":{"login":"copilot-pull-request-reviewer"}}]}}]}}}}}